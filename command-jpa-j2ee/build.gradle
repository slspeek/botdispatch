description = 'Command JPA J2EE Implementation'

configurations {
    daoTests
    testCompile.extendsFrom(daoTests)
}

dependencies {
    compile project(':command-api')
    compile project(':command-jpa')
    compile libs.commons_lang
    compile libs.inject
    compile libs.guice
    compile libs.hibernate_all
    compile libs.derby_all
    compile libs.jta
    compile libs.gwt_dispatch
    compile libs.jdo_api
    compile libs.guice_servlet

    testCompile project(':test')
    testCompile project(path: ':command-api', configuration: "testCompile")
    testCompile "org.slf4j:slf4j-log4j12:1.6.4"
    testCompile libs.junit
    testCompile libs.mockito
    testCompile libs.guava_testlib
    testCompile libs.guiceberry
    daoTests libs.simple_jpa_dao_genid_test
}

task unpackTest(dependsOn: ":command-api:packageTests") << {
    mkdir "$buildDir/dao-test"
    ant.unjar(dest: "$buildDir/dao-test", src:configurations.daoTests.files.iterator().next())
    ant.unjar(dest: "$buildDir/dao-test", src: file("../command-api/build/libs/command-api-${version}-tests.jar"))
}

task daoTest(type: Test, dependsOn: [classes, unpackTest]) {
    testClassesDir = file("$buildDir/dao-test")
    classpath = sourceSets.test.runtimeClasspath
    systemProperties['GuiceBerryEnvSelectorOverride_com.googlecode.simplejpadao.test.EmptyGuiceBerryEnv'] =
        'com.googlecode.botdispatch.model.command.J2eeCommandGuiceBerryEnv'
    systemProperties['GuiceBerryEnvSelectorOverride_com.googlecode.botdispatch.model.command.EmptyGuiceBerryEnv'] =
        'com.googlecode.botdispatch.model.command.J2eeCommandGuiceBerryEnv'
}

check.dependsOn daoTest
