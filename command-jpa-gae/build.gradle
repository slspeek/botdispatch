description = 'Command JPA GAE Implementation'

configurations {
    daoTests
    testCompile.extendsFrom(daoTests)
    jdo
    testRuntime
    runtime
}
dependencies {
    jdo 'org.datanucleus:datanucleus-core:1.1.5',
            'javax.jdo:jdo2-api:2.3-eb'
    jdo 'org.datanucleus:datanucleus-enhancer:1.1.4'

    compile project(':command-api')
    compile libs.gwt_servlet
    compile libs.inject
    compile libs.guice
    compile libs.commons_lang
    compile libs.gwt_dispatch
    compile libs.jdo_api
    compile project(':command-jpa')
    compile "com.google.appengine:appengine-api-1.0-sdk:1.6.0"
    compile("javax.jdo:jdo2-api:2.3-eb") {
        exclude(module: 'transaction-api')
    }
    compile "com.google.appengine.orm:datanucleus-appengine:1.0.4.1"
    compile("org.datanucleus:datanucleus-core:1.1.5") {
        exclude(module: 'transaction-api')
    }
    compile libs.simple_jpa_dao_impl

    runtime 'com.google.appengine:datanucleus-jpa:1.1.5'
    runtime 'com.google.appengine:geronimo-jpa_3.0_spec:1.1.1'

    testCompile project(path: ':command-api', configuration: "testCompile")
    testCompile project(':test')
    testCompile "org.slf4j:slf4j-log4j12:1.6.4"
    testCompile libs.junit
    testCompile libs.mockito
    testCompile libs.guava_testlib
    testCompile libs.guiceberry
    testCompile libs.gae_testing


    daoTests libs.simple_jpa_dao_genid_test
}

task unpackTest(dependsOn: ":command-api:packageTests") << {
    mkdir "$buildDir/dao-test"

    myTests = configurations.daoTests.files.iterator().next()
    ant.unjar(dest: "$buildDir/dao-test", src: myTests)

    myTests = file("../command-api/build/libs/command-api-${version}-tests.jar")
    ant.unjar(dest: "$buildDir/dao-test", src: myTests)
}

task daoTest(type: Test, dependsOn: [classes, unpackTest]) {
    testClassesDir = file("$buildDir/dao-test")
    classpath = sourceSets.test.runtimeClasspath
    systemProperties['GuiceBerryEnvSelectorOverride_com.googlecode.simplejpadao.test.EmptyGuiceBerryEnv'] =
        'com.googlecode.botdispatch.model.command.GaeCommandGuiceBerryEnv'
    systemProperties['GuiceBerryEnvSelectorOverride_com.googlecode.botdispatch.model.command.EmptyGuiceBerryEnv'] =
        'com.googlecode.botdispatch.model.command.GaeCommandGuiceBerryEnv'
}


check.dependsOn daoTest


task jdoEnhance << {
    inputs.dir sourceSets.main.allSource
    outputs.dir sourceSets.main.output.classesDir

    ant.taskdef(name: 'enhancer', classname: 'org.datanucleus.enhancer.tools.EnhancerTask', classpath: configurations.jdo.asPath)
    ant.enhancer(dir: sourceSets.main.output.classesDir.canonicalPath.toURI().toString(), verbose: 'true') {
        classpath {
            pathelement(location: sourceSets.main.output.classesDir.canonicalPath.toURI().toString())
            pathelement(path: configurations.jdo.asPath)
            pathelement(path: sourceSets.main.runtimeClasspath.asPath)
        }
        fileset(dir: sourceSets.main.output.classesDir.canonicalPath.toURI().toString()) {
            include(name: '**/*.class')
        }
    }
}


classes.dependsOn jdoEnhance